ADVECTION_END_TIME := 10000
INITIAL_CONDITIONS := constant/initialConditions
TRANSPORT_PROPERTIES := constant/transportProperties

ADVECTION_INITIAL_FIELDS := 0/U $(ADVECTION_INITIAL_TRACER_FIELD)
ADVECTION_FINAL_TRACER_DIFF := $(ADVECTION_END_TIME)/T_diff

# $(1) -- simulation case path
# $(2) -- subproject label
# $(3) -- mesh case path
define ADVECTION_TEMPLATE

  $(eval $(call TEST_CASE_TEMPLATE,$(1),,$(3)))
  $(eval $(call ADVECTION_DIAGNOSTICS_TEMPLATE,$(1),$(2)))

  .PHONY: $(2) clean-$(2)
  .INTERMEDIATE: $(2).intermediate

  all:: $(2)

  clean:: clean-$(2)

  $(2): $(1)/$(ADVECTION_TRACER_ERROR)

  clean-$(2):
	$(PY_FOAM_CLEAR_CASE) --processors-remove --additional=0 $(1)
	$(RM) $(1)/$(ADVECTION_TRACER_ERROR) $(2)*.log
	-$(UNLINK) $(1)/$(POLY_MESH_DIR)

  $(1)/$(ADVECTION_TRACER_ERROR): $(1)/$(ADVECTION_FINAL_TRACER_DIFF)
	$(GLOBAL_SUM) -case $(1) -time $(ADVECTION_END_TIME) T_diff > $(2).globalSum.log

  $(1)/$(ADVECTION_FINAL_TRACER_DIFF): \
    $(1)/$(ADVECTION_FINAL_TRACER_FIELD) \
    $(1)/$(ADVECTION_ANALYTIC_TRACER_FIELD)
	# subtract final numerical from analytic solution
	$(SUM_FIELDS) -case $(1) $(ADVECTION_END_TIME) T_diff 0 T_analytic $(ADVECTION_END_TIME) T -scale0 1 -scale1 -1 > $(2).sumFields.log

  $(1)/$(ADVECTION_ANALYTIC_TRACER_FIELD): \
    $(1)/$(INITIAL_CONDITIONS) \
    $(addprefix $(3)/,$(MESH_FILES)) \
  | $(1)/$(POLY_MESH_DIR)
	$(SET_SCALAR_OVER_OROGRAPHY) -case $(1) -x0 50000 -withoutWindField -tracerFieldFileName T_analytic > $(2).setScalarOverOrography.analytic.log # TODO: don't hardwire x0 value

  $(1)/$(ADVECTION_FINAL_TRACER_FIELD): \
    $(addprefix $(1)/,$(ADVECTION_INITIAL_FIELDS)) \
    $(1)/$(DECOMPOSE_PAR_DICT) \
    $(addprefix $(1)/,$(SYSTEM_FILES))
	$(SCALAR_TRANSPORT_FOAM) -case $(1) > $(2).scalarTransportFoam.log

  $(addprefix $(1)/,$(ADVECTION_INITIAL_FIELDS)): $(2).intermediate

  $(2).intermediate: \
    $(1)/$(POLY_MESH_DIR) \
    $(addprefix $(3)/,$(MESH_FILES)) \
    $(1)/$(INITIAL_CONDITIONS) \
    $(1)/$(TRANSPORT_PROPERTIES)
	$(SET_SCALAR_OVER_OROGRAPHY) -case $(1) > $(2).setScalarOverOrography.initial.log
	$(PERL) -0777 -i -pe 's/inlet.*?\}/inlet { type fixedValue; value uniform 0; }/smg' $(1)/0/T

endef

$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/noOrography/vanLeer,advection-noOrography-vanLeer,openfoam/cases/mesh/noOrography/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/noOrography/tvdLimitedCubicUpwindCPCFit,advection-noOrography-tvdLimitedCubicUpwindCPCFit,openfoam/cases/mesh/noOrography/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/noOrography/cubicUpwindCPCFit,advection-noOrography-cubicUpwindCPCFit,openfoam/cases/mesh/noOrography/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/btf/schaerCos/vanLeer,advection-btf-schaerCos-vanLeer,openfoam/cases/mesh/btf/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/btf/schaerCos/tvdLimitedCubicUpwindCPCFit,advection-btf-schaerCos-tvdLimitedCubicUpwindCPCFit,openfoam/cases/mesh/btf/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/btf/schaerCos/cubicUpwindCPCFit,advection-btf-schaerCos-cubicUpwindCPCFit,openfoam/cases/mesh/btf/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/snapCol/schaerCos/vanLeer,advection-snapCol-schaerCos-vanLeer,openfoam/cases/mesh/snapCol/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/snapCol/schaerCos/tvdLimitedCubicUpwindCPCFit,advection-snapCol-schaerCos-tvdLimitedCubicUpwindCPCFit,openfoam/cases/mesh/snapCol/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/snapCol/schaerCos/cubicUpwindCPCFit,advection-snapCol-schaerCos-cubicUpwindCPCFit,openfoam/cases/mesh/snapCol/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/sleve/schaerCos/vanLeer,advection-sleve-schaerCos-vanLeer,openfoam/cases/mesh/sleve/schaerCos/advection))
$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/advection/sleve/schaerCos/cubicUpwindCPCFit,advection-sleve-schaerCos-cubicUpwindCPCFit,openfoam/cases/mesh/sleve/schaerCos/advection))

$(eval $(call ADVECTION_TEMPLATE,openfoam/cases/wobblyTracerAdvection/btf/schaerCos/cubicUpwindCPCFit,wobblyTracerAdvection-btf-schaerCos-cubicUpwindCPCFit,openfoam/cases/mesh/btf/schaerCos/advection))
