POLY_MESH_DIR := constant/polyMesh
BLOCK_MESH_DICT := $(POLY_MESH_DIR)/blockMeshDict

BOUNDARY := $(POLY_MESH_DIR)/boundary

MESH_FILES := \
  $(BOUNDARY) \
  $(POLY_MESH_DIR)/faces \
  $(POLY_MESH_DIR)/neighbour \
  $(POLY_MESH_DIR)/owner \
  $(POLY_MESH_DIR)/points

ifndef NO_CHECK_MESH
  CHECK_MESH_OK = $(CHECK_MESH) -case $(1) -constant | $(TEE) $(2).checkMesh.log | $(GREP) -q "Mesh OK."
else
  CHECK_MESH_OK = true
endif

# $(1) -- case path
# $(2) -- subproject label
define MESH_TEMPLATE

  $(eval $(call CASE_TEMPLATE,$(1)))

  .PHONY: $(2) clean-$(2) check-$(2)

  $(2): \
    $(addprefix $(1)/,$(MESH_FILES)) \
    $(1)/$(2).OpenFOAM

  $(1)/$(2).OpenFOAM:
	$(TOUCH) $$@

  clean:: clean-$(2)

  clean-$(2):
	$(RM) -r $(1)

  check-$(2):
	$(CHECK_MESH_OK)

  $(1)/$(POLY_MESH_DIR):
	$(MKDIR) -p $$@

  $(1)/$(CONTROL_DICT):
	$(LN) -fs $(COMMON_CASE)/system/controlDictDummy $$@

  $(1)/$(FV_SCHEMES):
	$(LN) -fs $(COMMON_CASE)/system/fvSchemesDummy $$@

  $(1)/$(FV_SOLUTION):
	$(LN) -fs $(COMMON_CASE)/system/fvSolutionDummy $$@

endef
