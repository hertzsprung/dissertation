SPONGE_LAYER := constant/muSponge

# $(1) -- simulation case path
# $(2) -- subproject label
# $(3) -- mesh case path
define GRAVITY_WAVES_H_OP_TEMPLATE

  $(eval $(call GRAVITY_WAVES_TEMPLATE,$(1),$(2),$(3),$(EXNER_FOAM_H),$(SET_EXNER_BALANCED_H)))

  $(1)/$(FV_SCHEMES):
	$(LN) -fs $(COMMON_CASE)/$(FV_SCHEMES).gravityWaves.h $$@

endef

# $(1) -- simulation case path
# $(2) -- subproject label
# $(3) -- mesh case path
define GRAVITY_WAVES_DPDX_TEMPLATE

  $(eval $(call GRAVITY_WAVES_TEMPLATE,$(1),$(2),$(3),$(EXNER_FOAM),$(SET_EXNER_BALANCED)))

  $(1)/$(FV_SCHEMES):
	$(LN) -fs $(COMMON_CASE)/$(FV_SCHEMES).gravityWaves.dpdx $$@

endef

# $(1) -- simulation case path
# $(2) -- subproject label
# $(3) -- mesh case path
# $(4) -- exnerFoam executable
# $(5) -- setExnerBalancedH executable
define GRAVITY_WAVES_TEMPLATE

  $(eval $(call $(PHYSICAL_TEST_CASE_TEMPLATE),$(1),$(2),$(3),$(GRAVITY_WAVES_END_TIME),$(4),$(5)))

  $(eval $(call CONTROL_DICT_TEMPLATE,$(1),gravityWaves,$(GRAVITY_WAVES_END_TIME),8,$(GRAVITY_WAVES_WRITE_INTERVAL)))

  $(eval $(call GRAVITY_WAVES_DIAGNOSTICS_TEMPLATE,$(1),$(2)))

  .PHONY: $(2) clean-$(2)

  all:: $(2)

  clean:: clean-$(2)

  clean-$(2):
	$(RM) -r $(1)

  $(2).exnerFoam.intermediate: $(1)/$(SPONGE_LAYER)

  $(1)/$(SPONGE_LAYER): \
    $(1)/$(ENVIRONMENTAL_PROPERTIES) \
    $(1)/$(POLY_MESH_DIR) \
    $(addprefix $(3)/,$(MESH_FILES)) \
    $(addprefix $(1)/,$(SYSTEM_FILES))
	$(CREATE_SPONGE_LAYER) -case $(1) > $(2).createSpongeLayer.log

  $(1)/$(FV_SOLUTION):
	$(LN) -fs $(COMMON_CASE)/$(FV_SOLUTION).gravityWaves $$@

  $(1)/$(THETA_INIT): $(COMMON_CASE)/$(THETA_INIT).gravityWaves
	$(CP) $(COMMON_CASE)/$(THETA_INIT).gravityWaves $$@

  $(1)/$(EXNER_INIT): $(COMMON_CASE)/$(EXNER_INIT).gravityWaves
	$(CP) $(COMMON_CASE)/$(EXNER_INIT).gravityWaves $$@

  $(1)/$(INITIAL_UF_FIELD):
	$(LN) -fs $(COMMON_CASE)/$(INITIAL_UF_FIELD).gravityWaves $$@

  $(1)/$(ENVIRONMENTAL_PROPERTIES):
	$(LN) -fs $(COMMON_CASE)/$(ENVIRONMENTAL_PROPERTIES).gravityWaves $$@

  $(1)/$(THERMOPHYSICAL_PROPERTIES):
	$(LN) -fs $(COMMON_CASE)/$(THERMOPHYSICAL_PROPERTIES) $$@

endef

$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/btf/schaerExp/h,gravityWaves-btf-schaerExp-h,openfoam/cases/mesh/btf/schaerExp/gravityWaves))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/btf/schaerExp-doubleHigh/h,gravityWaves-btf-schaerExp-doubleHigh-h,openfoam/cases/mesh/btf/schaerExp/gravityWaves-doubleHigh))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/sleve/schaerExp/h,gravityWaves-sleve-schaerExp-h,openfoam/cases/mesh/sleve/schaerExp/gravityWaves))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/sleve/schaerExp-doubleHigh/h,gravityWaves-sleve-schaerExp-doubleHigh-h,openfoam/cases/mesh/sleve/schaerExp/gravityWaves-doubleHigh))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/snap/schaerExp/h,gravityWaves-snap-schaerExp-h,openfoam/cases/mesh/snap/schaerExp/gravityWaves))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/snapCol/schaerExp/h,gravityWaves-snapCol-schaerExp-h,openfoam/cases/mesh/snapCol/schaerExp/gravityWaves))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/snapCol/schaerExp-doubleHigh/h,gravityWaves-snapCol-schaerExp-doubleHigh-h,openfoam/cases/mesh/snapCol/schaerExp/gravityWaves-doubleHigh))
$(eval $(call GRAVITY_WAVES_H_OP_TEMPLATE,openfoam/cases/gravityWaves/snapOrtho/schaerExp/h,gravityWaves-snapOrtho-schaerExp-h,openfoam/cases/mesh/snapOrtho/schaerExp/gravityWaves))
$(eval $(call GRAVITY_WAVES_DPDX_TEMPLATE,openfoam/cases/gravityWaves/btf/schaerExp/dpdx,gravityWaves-btf-schaerExp-dpdx,openfoam/cases/mesh/btf/schaerExp/gravityWaves))
